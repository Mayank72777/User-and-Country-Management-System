name: Deploy to Google Compute Engine

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    name: Build & Deploy Docker to GCE
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up JDK to ensure proper compilation
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Build the Java project and generate the JAR file
      - name: Build with Maven
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRATION: 86400000
        run: |
          ./mvnw clean package -DskipTests

      # Set up Docker to build images
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      # Authenticate with Google Cloud using service account key
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # Configure Docker to use gcloud as a credential helper
      - name: Configure Docker to use gcloud as a credential helper
        run: |
          gcloud auth configure-docker

      # Build the Docker image using the generated JAR file
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_IMAGE }} .

      # Push the Docker image to Google Container Registry (GCR)
      - name: Push Docker image to GCR
        run: |
          docker push ${{ secrets.DOCKER_IMAGE }}

      # Deploy to Google Compute Engine via SSH
      - name: Deploy to GCE via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: 34.100.199.27
          username: ${{ secrets.GCE_SSH_USERNAME }}
          key: ${{ secrets.GCE_SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_IMAGE }}
            docker stop myapp || true
            docker rm myapp || true
            docker run -d --name myapp -p 8080:8080 ${{ secrets.DOCKER_IMAGE }}
